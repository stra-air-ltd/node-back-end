on:
  push:
    branches:
      - main
      - dev
  pull_request:
      types: [opened, synchronize, reopened]

name: SonarQube Scan
jobs:
  sonarqube:
    name: SonarQube Trigger
    runs-on: ubuntu-22.04
    steps:
    - name: Checking out
      uses: https://gitea.com/actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      run: |
        echo "deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse" | tee /etc/apt/sources.list
        echo "deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse" | tee -a /etc/apt/sources.list
        echo "deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse" | tee -a /etc/apt/sources.list
        echo "deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-security main restricted universe multiverse" | tee -a /etc/apt/sources.list
        apt-get update
        apt-get install -y openjdk-17-jdk
        java -version
        echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV

    - name: Install SonarScanner
      run: |
        wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
        unzip sonar-scanner-cli-4.8.0.2856-linux.zip
        mv sonar-scanner-4.8.0.2856-linux /opt/sonar-scanner

    - name: SonarQube Scan
      env:
        SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST }}
      run: |
        /opt/sonar-scanner/bin/sonar-scanner \
          -Dsonar.projectKey=${{ github.repository }} \
          -Dsonar.sources=src \
          -Dsonar.host.url=${{ secrets.SONARQUBE_HOST }} \
          -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }} \
          -Dsonar.sourceEncoding=UTF-8 \
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
          -Dsonar.exclusions=**/node_modules/**,**/*.test.ts